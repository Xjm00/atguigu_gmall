package com.atguigu.gmall.pay.config;import com.alipay.api.AlipayClient;import com.alipay.api.DefaultAlipayClient;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.PropertySource;/** * @ClassName AlipayConfig * @Author 19680 * @Date 2020/2/14 19:47 * @Version 1.0 * @Description TODO **/@Configuration@PropertySource("classpath:alipay.properties")public class AlipayConfig {    @Value("${alipay_url}")    public String alipay_url;  // 支付网关    @Value("${app_id}")    public String app_id;    @Value("${app_private_key}")    public String app_private_key;     // 我们自己应用的私钥(签名和安全)    public final static String format = "json";    public final static String charset = "utf-8";    public final static String sign_type = "RSA2";    public static String alipay_public_key;      // 支付宝的公钥(签名和安全)    public static String notify_payment_url;     // 访问支付宝结束后，异步通知地址    public static String return_payment_url;    // 访问支付宝结束后，支付宝的同步回调地址    @Value("${alipay_public_key}")    public void setAlipay_public_key(String alipay_public_key) {        AlipayConfig.alipay_public_key = alipay_public_key;    }    @Value("${return_payment_url}")    public void setReturn_url(String return_payment_url) {        AlipayConfig.return_payment_url = return_payment_url;    }    @Value("${notify_payment_url}")    public void setNotify_url(String notify_payment_url) {        AlipayConfig.notify_payment_url = notify_payment_url;    }    @Bean    public AlipayClient alipayClient(){        AlipayClient alipayClient = new DefaultAlipayClient(alipay_url,app_id,app_private_key,format,charset,alipay_public_key,sign_type);        return alipayClient;    };}