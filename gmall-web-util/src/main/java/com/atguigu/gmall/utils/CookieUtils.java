package com.atguigu.gmall.utils;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.UnsupportedEncodingException;import java.net.URLDecoder;import java.net.URLEncoder;/** * @ClassName CookieUtils * @Author 19680 * @Date 2020/1/29 16:12 * @Version 1.0 * @Description TODO **/public class CookieUtils {    /**     * @Author 19680     * @Email xiaojm00@163.com     * @Description 获取cookie的值     * @Date 16:23 2020/1/29     * @Param [request, cookieName, isDecoder]     * @return java.lang.String     **/    public static String getCookiValue(HttpServletRequest request, String cookieName, boolean isDecoder) {        Cookie[] cookies = request.getCookies();        if (cookies == null || cookieName == null) {            return null;        }        String cookieValue = null;        try {            for (Cookie cookie : cookies) {                if (cookie.getName().equals(cookieName)) {                    if (isDecoder) {                        cookieValue = URLDecoder.decode(cookie.getValue(), "UTF-8");                    } else {                        cookieValue = cookie.getValue();                    }                    break;                }            }        } catch (Exception e) {            e.printStackTrace();        }        return cookieValue;    }    /**     * @Author 19680     * @Email xiaojm00@163.com     * @Description 设置一个cookie     * @Date 21:22 2020/2/5     * @Param [request, response, cookieName, cookieValue, cookieMaxage, isEncode]     * @return void     **/    public static void setCookie(HttpServletRequest request, HttpServletResponse response, String cookieName, String cookieValue, int cookieMaxage, boolean isEncode) {        try {            if (cookieValue == null) {                cookieValue = "";            } else if (isEncode) {                cookieValue = URLEncoder.encode(cookieValue, "UTF-8");            }            Cookie cookie = new Cookie(cookieName, cookieValue);            if (cookieMaxage >= 0) {                cookie.setMaxAge(cookieMaxage);            }            if (null != request) {                cookie.setDomain(getDomainName(request));                cookie.setPath("/");                response.addCookie(cookie);            }        } catch (UnsupportedEncodingException e) {            e.printStackTrace();        }    }    /***     * 获得cookie的主域名，本系统为gmall.com，保存时使用     * @param request     * @return     */    private static final String getDomainName(HttpServletRequest request) {        String domainName = null;        String serverName = request.getRequestURL().toString();        if (serverName == null || serverName.equals("")) {            domainName = "";        } else {            serverName = serverName.toLowerCase();            serverName = serverName.substring(7);            final int end = serverName.indexOf("/");            serverName = serverName.substring(0, end);            final String[] domains = serverName.split("\\.");            int len = domains.length;            if (len > 3) {                // www.xxx.com.cn                domainName = domains[len - 3] + "." + domains[len - 2] + "." + domains[len - 1];            } else if (len <= 3 && len > 1) {                // xxx.com or xxx.cn                domainName = domains[len - 2] + "." + domains[len - 1];            } else {                domainName = serverName;            }        }        if (domainName != null && domainName.indexOf(":") > 0) {            String[] ary = domainName.split("\\:");            domainName = ary[0];        }        System.out.println("domainName = " + domainName);        return domainName;    }    /***     * 将cookie中的内容按照key删除     * @param request     * @param response     * @param cookieName     */    public static void deleteCookie(HttpServletRequest request, HttpServletResponse response, String cookieName) {        setCookie(request, response, cookieName, null, 0, false);    }}