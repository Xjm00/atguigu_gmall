package com.atguigu.gmall.manage.service.impl;import com.alibaba.dubbo.config.annotation.Service;import com.atguigu.gmall.bean.PmsBaseAttrInfo;import com.atguigu.gmall.bean.PmsBaseAttrValue;import com.atguigu.gmall.manage.mapper.PmsBaseAttrInfoMapper;import com.atguigu.gmall.manage.mapper.PmsBaseAttrValueMapper;import com.atguigu.gmall.service.PmsBaseAttrInfoService;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import tk.mybatis.mapper.entity.Example;import java.util.ArrayList;import java.util.HashSet;import java.util.List;/** * @ClassName PmsBaseAttrInfoServiceImpl * @Author 19680 * @Date 2020/1/7 15:54 * @Version 1.0 * @Description TODO **/@Servicepublic class PmsBaseAttrInfoServiceImpl implements PmsBaseAttrInfoService {    @Autowired    PmsBaseAttrInfoMapper pmsBaseAttrInfoMapper;    @Autowired    PmsBaseAttrValueMapper pmsBaseAttrValueMapper;    /* *     * @Author 19680     * @Email xiaojm00@163.com     * @Description 点击添加Sku信息需要该产品的获取平台属性和平台属性值     * @Date 11:27 2020/1/10     * @Param [catalog3Id]     * @return java.util.List<com.atguigu.gmall.bean.PmsBaseAttrInfo>     **/    @Override    public List<PmsBaseAttrInfo> getAtterInfoList(String catalog3Id) {        // 通过三级分类的id获取平台属性集合        PmsBaseAttrInfo pmsBaseAttrInfo = new PmsBaseAttrInfo();        pmsBaseAttrInfo.setCatalog3Id(catalog3Id);        List<PmsBaseAttrInfo> pmsBaseAttrInfoList = pmsBaseAttrInfoMapper.select(pmsBaseAttrInfo);        // 获取每个平台属性中属性值        for (PmsBaseAttrInfo baseAttrInfo : pmsBaseAttrInfoList) {            // 获取到平台id            String attrInfoId = baseAttrInfo.getId();            PmsBaseAttrValue pmsBaseAttrValue = new PmsBaseAttrValue();            pmsBaseAttrValue.setAttrId(attrInfoId);            // 从数据库中查询平台属性值集合            List<PmsBaseAttrValue> pmsBaseAttrValueList = pmsBaseAttrValueMapper.select(pmsBaseAttrValue);            baseAttrInfo.setAttrValueList(pmsBaseAttrValueList);        }        return pmsBaseAttrInfoList;    }    @Override    public void savePmsBaseAttrInfo(PmsBaseAttrInfo pmsBaseAttrInfo) {        String id = pmsBaseAttrInfo.getId();        if(StringUtils.isBlank(id)){// if(id==null||id.equals(""))            // 新增操作            pmsBaseAttrInfoMapper.insertSelective(pmsBaseAttrInfo);// 插入属性表，一条属性            // 主键生成策略            id = pmsBaseAttrInfo.getId();//@GeneratedValue(strategy = GenerationType.IDENTITY)        }else{            // 更新属性            Example example = new Example(PmsBaseAttrInfo.class);            example.createCriteria().andEqualTo("id",pmsBaseAttrInfo.getId());            pmsBaseAttrInfoMapper.updateByExampleSelective(pmsBaseAttrInfo,example);            // 删除属性值            PmsBaseAttrValue pmsBaseAttrValue = new PmsBaseAttrValue();            pmsBaseAttrValue.setAttrId(id);            pmsBaseAttrValueMapper.delete(pmsBaseAttrValue);        }        List<PmsBaseAttrValue> attrValueList = pmsBaseAttrInfo.getAttrValueList();        for (PmsBaseAttrValue pmsBaseAttrValue : attrValueList) {            pmsBaseAttrValue.setAttrId(id);            pmsBaseAttrValueMapper.insertSelective(pmsBaseAttrValue);// 插入属性值表，多条属性值        }    }    @Override    public List<PmsBaseAttrValue> getAtterValueListByAttrId(String attrId) {        PmsBaseAttrValue pmsBaseAttrValue = new PmsBaseAttrValue();        pmsBaseAttrValue.setAttrId(attrId);        return pmsBaseAttrValueMapper.select(pmsBaseAttrValue);    }    @Override    public List<PmsBaseAttrInfo> getAttrInfoListByValueIds(HashSet<String> set) {        String join = StringUtils.join(set, ",");        List<PmsBaseAttrInfo> pmsBaseAttrInfoList = pmsBaseAttrInfoMapper.selectBySkuValueIds(join);        return pmsBaseAttrInfoList;    }}