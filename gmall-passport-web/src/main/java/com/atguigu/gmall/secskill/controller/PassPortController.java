package com.atguigu.gmall.secskill.controller;import com.alibaba.dubbo.config.annotation.Reference;import com.alibaba.fastjson.JSON;import com.atguigu.gmall.bean.UmsMember;import com.atguigu.gmall.service.UmsMemberService;import com.atguigu.gmall.service.UserService;import com.atguigu.gmall.utils.CookieUtils;import com.atguigu.gmall.utils.HttpclientUtil;import com.atguigu.gmall.utils.JwtUtil;import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.commons.lang3.StringUtils;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.CrossOrigin;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;import java.util.Date;import java.util.HashMap;import java.util.Map;/** * @ClassName PassPortController * @Author 19680 * @Date 2020/2/10 21:33 * @Version 1.0 * @Description TODO **/@Controller@CrossOriginpublic class PassPortController {    @Reference    UserService userService;    @Reference    UmsMemberService umsMemberService;    @RequestMapping("verify")    @ResponseBody    public String verify(HttpServletRequest request, String token, String ip){        UmsMember umsMember = userService.verify(token);        if (umsMember != null){            HashMap<String, String> map = new HashMap<>();            map.put("userId",umsMember.getId());            map.put("nickname",umsMember.getNickName());            return JSON.toJSONString(map);        }else {            return null;        }    }    @RequestMapping("index")    public String index(String ReturnUrl, ModelMap modelMap){        modelMap.put("ReturnUrl", ReturnUrl);        return "index";    }    @RequestMapping("login")    @ResponseBody    public String login(HttpServletRequest request, UmsMember umsMember){        // 从数据库中查询出用户登录信息        UmsMember umsMemberFromDb =userService.login(umsMember);        String token = "";        if (umsMemberFromDb == null){            token = "fail";        }else {            String key ="atguigu0830";            Map<String, String> map = new HashMap<>();            map.put("userId",umsMemberFromDb.getId());            map.put("nickname",umsMemberFromDb.getNickName());            String ip = request.getRemoteAddr();            ip = "0:0:0:0:0:0:0:1".equals(ip) ? "127.0.0.1" : ip;            token = JwtUtil.encode(key, map, ip);        }        // 同步到缓存        userService.putTokenForCache(token,umsMemberFromDb);        return token;    }    /* *     * @Author 19680     * @Email xiaojm00@163.com     * @Description  第三方登录：微博     * @Date 23:00 2020/2/11     * @Param []     * @return java.lang.String     **/    @RequestMapping("vlogin")    public String vlogin(HttpServletRequest request, String code, ModelMap modelMap){//        <!-- 第三方登录：第二步：微博执行回调函数，生成微博的token，进入本方法 -->//        即：https://api.weibo.com/oauth2/authorize?client_id=1390004546&response_type=code&redirect_uri=http://127.0.0.1:8077/vlogin        String token = "";        Map<String, String> accessTokenMap = new HashMap<>();        accessTokenMap.put("client_id","1390004546");        accessTokenMap.put("client_secret","80692a54064a796b8e44324f5decb806");        accessTokenMap.put("grant_type","authorization_code");        accessTokenMap.put("code",code);        accessTokenMap.put("redirect_uri","http://127.0.0.1:8077/vlogin");//        <!-- 第三方登录：第三步：携带微博生成的token获取访问权限 -->//        即：https://api.weibo.com/oauth2/access_token        String json = HttpclientUtil.doPost("https://api.weibo.com/oauth2/access_token", accessTokenMap);        if (StringUtils.isNotBlank(json)){            HashMap<String, Object> jsonMap = new HashMap<>();            jsonMap = JSON.parseObject(json, jsonMap.getClass());//            查询用户信息：//            https://api.weibo.com/2/users/show.json?access_token=2.00RpYWHGKg_EWB9cd6d59717ZunP2B&uid=5607991715            String uid = (String)jsonMap.get("uid");            String access_token = (String) jsonMap.get("access_token");            String doGetJson = HttpclientUtil.doGet("https://api.weibo.com/2/users/show.json?access_token=" + access_token + "&uid=" + uid);            // 解析doGetJson，保存数据，并同步缓存            jsonMap = JSON.parseObject(doGetJson,jsonMap.getClass());            UmsMember umsMember = new UmsMember();            umsMember.setSourceType("2");            umsMember.setSourceUid(uid);            umsMember.setNickName((String)jsonMap.get("screen_name"));            umsMember.setUserName((String)jsonMap.get("name"));            umsMember.setAccessCode(code);            umsMember.setAccessToken(access_token);            umsMember.setCreateTime(new Date());            umsMember.setCity((String)jsonMap.get("city"));            UmsMember umsMemberReslut =umsMemberService.saveUmsMember(umsMember);            // 生成本站的token，跳转到首页进行本站认证登录            String key = "atguigu0830";            String ip = request.getHeader("X-forwarded-for");            if (StringUtils.isBlank(ip)){                ip = request.getRemoteAddr();                if (StringUtils.isBlank(ip)){                    ip = "127.0.0.0.1";                }            }            ip = "0:0:0:0:0:0:0:1".equals(ip) ? "127.0.0.1" : ip;            Map<String, String> map = new HashMap<>();            map.put("userId",umsMemberReslut.getId());            map.put("nickname",umsMemberReslut.getNickName());            token = JwtUtil.encode(key, map, ip);            // 同步缓存            userService.putTokenForCache(token,umsMemberReslut);            // 重定向到index            StringBuffer requestURL = request.getRequestURL();            return "redirect:http://localhost:8076/toTrade?newToken=" + token;        }        // 没有获取到权限，直接跳回index登陆页面，重新选择登陆方式        return "index";    }}