package com.atguigu.gmall.manage.controller;import com.alibaba.dubbo.config.annotation.Reference;import com.atguigu.gmall.bean.PmsBaseSaleAttr;import com.atguigu.gmall.bean.PmsProductImage;import com.atguigu.gmall.bean.PmsProductInfo;import com.atguigu.gmall.bean.PmsProductSaleAttr;import com.atguigu.gmall.service.PmsBaseSaleAttrService;import com.atguigu.gmall.service.PmsProductInfoService;import org.csource.common.MyException;import org.csource.fastdfs.ClientGlobal;import org.csource.fastdfs.StorageClient;import org.csource.fastdfs.TrackerClient;import org.csource.fastdfs.TrackerServer;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import java.io.IOException;import java.util.List;/** * @ClassName SkuController * @Author 19680 * @Date 2020/1/7 20:09 * @Version 1.0 * @Description TODO **/@CrossOrigin@Controllerpublic class SpuController {    @Reference    PmsProductInfoService pmsProductInfoService;    @Reference    PmsBaseSaleAttrService pmsBaseSaleAttrService;    @ResponseBody    @RequestMapping("spuSaleAttrList")    public List<PmsProductSaleAttr> getProductSaleAttrListBySpuId(@RequestParam("spuId")String spuId){        return pmsProductInfoService.getPmsProductInfoListBySpuId(spuId);    }    @ResponseBody    @RequestMapping("spuImageList")    public List<PmsProductImage> getProductImageListBySpuId(@RequestParam("spuId")String spuId){        return pmsProductInfoService.getProductImageListBySpuId(spuId);    }    @ResponseBody    @RequestMapping("spuList")    public List<PmsProductInfo> getSpuList(String catalog3Id){        return pmsProductInfoService.getPmsProductInfoListByCatakog3Id(catalog3Id);    }    @ResponseBody    @RequestMapping("baseSaleAttrList")    public List<PmsBaseSaleAttr> getBaseSaleAttrList(){        return pmsBaseSaleAttrService.getBaseSaleAttrList();    }    @ResponseBody    @RequestMapping("saveSpuInfo")    public String saveSpuInfo(@RequestBody PmsProductInfo pmsProductInfo){        pmsProductInfoService.saveSpuInfo(pmsProductInfo);        return "success";    }    @ResponseBody    @RequestMapping("fileUpload")    public String saveFileUpload(@RequestParam("file")MultipartFile multipartFile)  {        String imageUrl = "http://192.168.239.133";        try {            // 1.链接trackerServer            String conf_fileName = SpuController.class.getClassLoader().getResource("tracker.conf").getPath();            ClientGlobal.init(conf_fileName);            TrackerClient trackerClient = new TrackerClient();            TrackerServer trackerServer = trackerClient.getTrackerServer();            // 2.通过trackerServer获取可用的storageServer地址            StorageClient storageClient = new StorageClient(trackerServer, null);            // 3.向storageServer上传文件U            byte[] multipartFileBytes = multipartFile.getBytes();            String originalFilename = multipartFile.getOriginalFilename();            int index = originalFilename.lastIndexOf(".");            String ext = originalFilename.substring(index + 1);            String[] urls = storageClient.upload_file(multipartFileBytes, ext, null);            // 4.storageServer返回存储地址给客户端            for (String url : urls) {                imageUrl = imageUrl + "/" + url;            }        } catch (IOException e) {            e.printStackTrace();        } catch (MyException e) {            e.printStackTrace();        }        // 6.返回图片地址：        return imageUrl;    }}