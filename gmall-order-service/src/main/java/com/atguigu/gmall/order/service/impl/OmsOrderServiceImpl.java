package com.atguigu.gmall.order.service.impl;import com.alibaba.dubbo.config.annotation.Reference;import com.alibaba.dubbo.config.annotation.Service;import com.alibaba.fastjson.JSON;import com.atguigu.gmall.bean.OmsOrder;import com.atguigu.gmall.order.mapper.OmsOrderMapper;import com.atguigu.gmall.service.OmsOrderItemService;import com.atguigu.gmall.service.OmsOrderService;import com.atguigu.gmall.secskill.util.ActiveMQUtil;import com.atguigu.gmall.secskill.util.RedisUtil;import org.springframework.beans.factory.annotation.Autowired;import redis.clients.jedis.Jedis;/** * @ClassName OmsOrderServiceImpl * @Author 19680 * @Date 2020/2/13 11:42 * @Version 1.0 * @Description TODO **/@Servicepublic class OmsOrderServiceImpl implements OmsOrderService {    @Autowired    OmsOrderMapper omsOrderMapper;    @Autowired    RedisUtil redisUtil;    @Autowired    ActiveMQUtil activeMQUtil;    @Reference    OmsOrderItemService orderItemService;    @Override    public void savaOrder(OmsOrder omsOrder) {        omsOrderMapper.insertSelective(omsOrder);    }    @Override    public OmsOrder getOrderByOrderSn(String orderSn) {        OmsOrder omsOrder = new OmsOrder();        omsOrder.setOrderSn(orderSn);        return (OmsOrder) omsOrderMapper.selectOne(omsOrder);    }    /* *     * @Author 19680     * @Email xiaojm00@163.com     * @Description 通过orderSn更新缓存                * @Date 12:00 2020/2/13                * @Param [userId, orderSn]     * @return void     **/        @Override        public void flushallOrder(String  userId, String orderSn) {            // 更新缓存            String orderKey = "userId:" + userId + ":orderSn:" + orderSn; // 订单缓存            OmsOrder order = getOrderByOrderSn(orderSn);            Jedis jedis = redisUtil.getJedis();            jedis.setex(orderKey,1000*60*60*24, JSON.toJSONString(order));            try {                jedis.close();            } catch (Exception e) {                e.printStackTrace();            }        }        @Override        public void updateOrderByOrder(OmsOrder omsOrder) {//            Example example = new Example(OmsOrder.class);//            Example.Criteria criteria = example.createCriteria();//            criteria.andEqualTo("orderSn",omsOrder.getOrderSn());//        omsOrderMapper.updateByExampleSelective(omsOrder, example);            omsOrderMapper.updateByPrimaryKeySelective(omsOrder);    }}