package com.atguigu.gmall.order.listener;import com.atguigu.gmall.bean.OmsOrder;import com.atguigu.gmall.service.OmsOrderService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.jms.annotation.JmsListener;import org.springframework.stereotype.Component;import javax.jms.*;import java.util.Date;/** * @ClassName OrderMQListener * @Author 19680 * @Date 2020/2/17 11:01 * @Version 1.0 * @Description TODO **/@Componentpublic class OrderMQListener {    @Autowired    OmsOrderService orderService;    /***监听支付状态，并修改订单中支付状态************************************************/    @JmsListener(containerFactory = "jmsQueueListener", destination = "PAY_SUCCESS_QUEUE")    public void orderCunsumerMQ(MapMessage mapMessage) {        try {            String out_trade_no = mapMessage.getString("out_trade_no");            String status = mapMessage.getString("status");            System.err.println("订单号为:" + out_trade_no + "的支付状态是：" + status);            OmsOrder order = orderService.getOrderByOrderSn(out_trade_no);            if (order != null) {//                订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单//                if (PayStatus.TRADE_CLOSED.equals(status)) {//                    paymentInfo.setPaymentStatus("未付款");//                }//                if (PayStatus.TRADE_FINISHED.equals(status)) {//                    paymentInfo.setPaymentStatus("已关闭");//                }//                if (PayStatus.TRADE_SUCCESS.equals(status)) {//                    paymentInfo.setPaymentStatus("已支付");//                }                if ("已支付".equals(status)) {                    order.setStatus("1");                } else if ("未付款".equals(status)) {                    order.setStatus("0");                } else if ("已关闭".equals(status)) {                    order.setStatus("4");                } else {                    order.setStatus("5");                }                order.setPaymentTime(new Date());                orderService.updateOrderByOrder(order);                // 更新订单缓存                orderService.flushallOrder(order.getMemberId(), order.getOrderSn());            }        } catch (JMSException e) {            e.printStackTrace();        }    }    @JmsListener(containerFactory = "jmsQueueListener", destination = "SKU_DEDUCT_QUEUE")    public void orderListenerGware(MapMessage message) {        try {            String orderId = message.getString("orderId");            String status = message.getString("status");    // 五种状态：//            PAID("已付款"),//            DEDUCTED("已减库存"),//            OUT_OF_STOCK("已付款，库存超卖"),//            DELEVERED("已出库"),//            SPLIT("已拆分");//            订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单            OmsOrder omsOrder = new OmsOrder();            if ("PAID".equals(status) || "DEDUCTED".equals(status)){                omsOrder.setStatus("1");            }            if ("DELEVERED".equals(status) || "SPLIT".equals(status)){                omsOrder.setStatus("2");            }            if ("OUT_OF_STOCK".equals(status)){                omsOrder.setStatus("5");            }            omsOrder.setOrderSn(orderId);            orderService.updateOrderByOrder(omsOrder);        } catch (JMSException e) {            e.printStackTrace();        }    }}